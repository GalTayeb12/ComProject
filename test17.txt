def _main_() :
  var
    type int: i;
    type real: r;
    type char: c;
    type bool: b;
    type int*: pi;
    type real*: pr;
    type char*: pc;
    type int: arr[5];
  begin
    #-> Initialize pointers <-#
    pi = &i;
    pr = &r;
    pc = &c;
    
    #-> Valid dereference operations <-#
    i = *pi;      #-> Should work: dereferencing int* <-#
    r = *pr;      #-> Should work: dereferencing real* <-#
    c = *pc;      #-> Should work: dereferencing char* <-#
    
    #-> Valid dereference on left side of assignment <-#
    *pi = 10;     #-> Should work: assigning to dereferenced int* <-#
    *pr = 3.14;   #-> Should work: assigning to dereferenced real* <-#
    *pc = 'A';    #-> Should work: assigning to dereferenced char* <-#
    
    #-> Invalid dereference operations <-#
     #->i = *i;       Should fail: dereferencing non-pointer int <-#
    #->r = *r;        Should fail: dereferencing non-pointer real <-#
   #-> b = *b;        Should fail: dereferencing non-pointer bool <-#
    #-> i = *arr;     Should fail: dereferencing array name <-#
    
    #-> Invalid dereference on left side <-#
    #-> *i = 20;      Should fail: assigning to dereferenced non-pointer <-#
   #-> *r = 2.5;      Should fail: assigning to dereferenced non-pointer <-#
    
    #-> Dereferencing expressions <-#
    i = *(pi);    #-> Should work: dereferencing expression that returns pointer <-#
    i = *(&i);    #-> Should work: taking address then dereferencing <-#
    
    #-> Dereferencing null <-#
    pi = null;
    i = *pi;      #-> Should fail: dereferencing null pointer (if your language checks this) <-#
  end
