Parsing completed successfully.
DEBUG: Registering function 'foo1' with 4 parameters
DEBUG: Registering function 'goo1' with 4 parameters
DEBUG: Registering function 'goo2' with 3 parameters
DEBUG: Argument 1 of function 'goo2' - detected type: 'INT', expected type: 'INT'
DEBUG: Registering function 'foo3' with 3 parameters
DEBUG: Registering function 'si1' with 1 parameters
DEBUG: Argument 4 of function 'foo1' - detected type: 'CHAR', expected type: 'CHAR'
DEBUG: Argument 1 of function 'si1' - detected type: 'unknown', expected type: 'INT'
DEBUG: Registering function 'foo2' with 0 parameters
Adding array 's1' with type 'STRING'
Adding array 's2' with type 'STRING'
DEBUG: Registering function '_main_' with 0 parameters
DEBUG: All variables in current scope:
Starting parsing...
(CODE
  (FUNC
    foo1
      (PARS
        (par1 INT a)
        (par2 INT b)
        (par3 INT c)
        (par4 CHAR c1)
      )
      (BOOL)
      (BODY
        (BLOCK
          (BOOL res)
        )
        (BLOCK
          (BLOCK
            (BODY
              (BLOCK
                (VAR_LIST
                  (CHAR x)
                  (CHAR b1)
                )
                (INT y)
              )
              (BLOCK
                (BLOCK
                  (= b1
                    ('&')
                  )
                  (= a
                    (-
                      (/
                        (* y 7)
                        a
                      )
                      y
                    )
                  )
                )
              )
            )
            (RET res)
          )
        )
      )
  )
  (FUNC
    goo1
      (PARS
        (par1 INT i)
        (par2 INT j)
        (par3 INT k)
        (par4 INT x)
      )
      (RET NONE)
      (BODY
        (BLOCK
          (goo2
            (PARS
              (par1 INT l)
              (par2 INT m)
              (par3 INT n)
            )
            (BOOL)
            (BODY
              (BLOCK
                (VAR_LIST
                  (BOOL x1)
                  (BOOL j1)
                )
                (CHAR k1)
              )
              (BLOCK
                (BLOCK
                  (= k1
                    ('@')
                  )
                  (= i
                    (+ l l)
                  )
                  (IF
                    (OR
                      (== k1 '*')
                      (AND
                        (!= x1 False)
                        (<
                          (+ l m)
                          i
                        )
                      )
                    )
                    (BLOCK
                      (= x1
                        (< l m)
                      )
                    )
                  )
                  (RET x1)
                )
              )
            )
          )
          (BLOCK
            (BODY
              (BLOCK
                (CHAR x)
                (BOOL k)
              )
              (BLOCK
                (= k
                  (CALL
                    (goo2)
                    (ARGS
                      (5)
                      (i)
                      (j)
                    )
                  )
                )
              )
            )
            (= n
              (False)
            )
            (= x1
              (k)
            )
          )
        )
      )
  )
  (FUNC
    foo3
      (PARS
        (par1 INT i)
        (par2 INT j)
        (par3 INT k)
      )
      (INT)
      (BODY
        (BLOCK
          (INT total)
          (BOOL bo)
        )
        (BLOCK
          (si1
            (PARS
              (par1 INT t)
            )
            (INT)
            (BODY
              (BLOCK
                (INT temp)
              )
              (BLOCK
                (BLOCK
                  (= temp
                    (* t t)
                  )
                  (RET temp)
                )
              )
            )
          )
          (BLOCK
            (= bo
              (CALL
                (foo1)
                (ARGS
                  (i)
                  (j)
                  (k)
                  ('^')
                )
              )
            )
            (= total
              (CALL
                (si1)
                (ARGS
                  (+
                    (+ i j)
                    k
                  )
                )
              )
            )
            (RET total)
          )
        )
      )
  )
  (FUNC
    foo2
      (PARS NONE)
      (INT)
      (BODY
        (BLOCK
          (BLOCK
            (STR s1[100])
            (STR s2[100])
          )
          (= INT i
            (0)
          )
          (= INT j
            (0)
          )
          (INT cnt)
        )
        (BLOCK
          (BLOCK
            (= cnt
              (1)
            )
            (WHILE
              (<
                (i)
                (LEN
                  (s1)
                )
              )
              (BLOCK
                (BLOCK
                  (WHILE
                    (<
                      (j)
                      (/
                        (LEN
                          (s2)
                        )
                        2
                      )
                    )
                    (BLOCK
                      (BLOCK
                        (BLOCK
                          (= cnt
                            (* cnt 2)
                          )
                        )
                        (= j
                          (+ j 1)
                        )
                      )
                    )
                  )
                  (= i
                    (+ i 1)
                  )
                )
              )
            )
            (RET cnt)
          )
        )
      )
  )
  (FUNC
    _main_
      (PARS NONE)
      (RET NONE)
      (BODY
        (BLOCK
          (INT x1)
        )
        (BLOCK
          (= x1
            (CALL
              (foo2)
              (ARGS NONE)
            )
          )
        )
      )
  )
)
